{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\niziToast.settings({\n  timeout: 3500,\n  transitionIn: 'fadeIn',\n  transitionOut: 'fadeOut',\n  position: 'topRight',\n  message: 'Please choose a date in the future',\n  messageColor: 'white',\n  backgroundColor: 'red',\n  progressBar: false,\n  close: true,\n});\n\nconst TIMER_STORAGE_KEY = 'userSelectedDate';\nconst TIMER_RUNNING_KEY = 'isRunning';\nconst datePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst resetBtn = document.querySelector('[data-reset]');\n\nconst timeElements = {};\n['days', 'hours', 'minutes', 'seconds'].forEach(unit => {\n  timeElements[unit] = document.querySelector(`[data-${unit}]`);\n});\n\nstartBtn.disabled = true;\nresetBtn.disabled = true;\n\nlet isTimerRunning;\nlet userSelectedDate;\nlet countdownInterval;\n\nconst storedDate = localStorage.getItem(TIMER_STORAGE_KEY);\nisTimerRunning = localStorage.getItem(TIMER_RUNNING_KEY) === 'true';\n\nif (storedDate) {\n  userSelectedDate = new Date(parseInt(storedDate));\n  startBtn.disabled = !isTimerRunning;\n  resetBtn.disabled = !isTimerRunning;\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: userSelectedDate || new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.show();\n      return;\n    } else {\n      startBtn.disabled = false;\n      localStorage.setItem(TIMER_STORAGE_KEY, userSelectedDate.getTime());\n      localStorage.setItem('isRunning', true);\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  const now = new Date().getTime();\n  const timeDifference = userSelectedDate.getTime() - now;\n\n  if (timeDifference > 0) {\n    startCountdown(timeDifference);\n    resetBtn.disabled = false;\n  } else {\n    iziToast.error();\n  }\n});\n\nfunction startCountdown(timeDifference) {\n  countdownInterval = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    updateTimerDisplay({ days, hours, minutes, seconds });\n    timeDifference -= 1000;\n\n    if (timeDifference < 0) {\n      clearInterval(countdownInterval);\n    }\n  }, 1000);\n\n  resetBtn.addEventListener('click', resetTimer);\n}\n\nfunction resetTimer() {\n  clearInterval(countdownInterval);\n  localStorage.removeItem(TIMER_STORAGE_KEY);\n  localStorage.removeItem('isRunning');\n\n  Object.values(timeElements).forEach(element => (element.textContent = '00'));\n\n  resetBtn.disabled = true;\n  datePicker.disabled = false;\n}\n\nfunction addZero(unit) {\n  return unit < 10 ? `0${unit}` : unit;\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  timeElements.days.textContent = addZero(days);\n  timeElements.hours.textContent = addZero(hours);\n  timeElements.minutes.textContent = addZero(minutes);\n  timeElements.seconds.textContent = addZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["iziToast","TIMER_STORAGE_KEY","TIMER_RUNNING_KEY","datePicker","startBtn","resetBtn","timeElements","unit","isTimerRunning","userSelectedDate","countdownInterval","storedDate","options","selectedDates","flatpickr","now","timeDifference","startCountdown","days","hours","minutes","seconds","convertMs","updateTimerDisplay","resetTimer","element","addZero","ms"],"mappings":"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"}